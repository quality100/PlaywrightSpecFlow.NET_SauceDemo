pipeline{
    agent any  
    stages{
        stage('Build Project'){
             agent{
                docker{
                    image 'mcr.microsoft.com/playwright/dotnet:v1.25.0-focal'
                    args '-u root'
                }  
             }
             environment{
                DOTNET_CLI_HOME = "/tmp/DOTNET_CLI_HOME"
             }
            steps{
                dotnetRestore project: 'playwright_specflow/playwright_specflow.csproj'
                dotnetBuild project: 'playwright_specflow/playwright_specflow.csproj'
            }
        }
        stage('Install Playwright'){
            agent{
                docker{
                image 'mcr.microsoft.com/playwright/dotnet:v1.25.0-focal'
                args '-u root'
                }  
            }
            environment{
                DOTNET_CLI_HOME = "/tmp/DOTNET_CLI_HOME"
            }
            steps{
            sh 'pwsh playwright_specflow/bin/Debug/net6.0/playwright.ps1 install --with-deps' 
            }
        }
        stage('Run Tests'){
            agent{
                docker{
                    image 'mcr.microsoft.com/playwright/dotnet:v1.25.0-focal'
                    args '-u root'
                }  
            }
            environment{
                DOTNET_CLI_HOME = "/tmp/DOTNET_CLI_HOME"
            }
            steps{
            dotnetTest project: 'playwright_specflow/playwright_specflow.csproj'
            stash name: 'allure-results', includes: 'playwright_specflow/bin/Debug/net6.0/allure-results/*'
            }
        }
    }
    post {
        always {
            unstash 'allure-results'
            script {
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }
} 
